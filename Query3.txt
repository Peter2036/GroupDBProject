//Gives the total number of movies a selected star has starred in and their rating distribution as a percentage. Percentages falling in the 0-1 range account for the movies that have null ratings.

select ten.star_ID, Total,
((zeroOne/Total) * 100) as "0-1/NULL",
((oneTwo/Total) * 100) as "1-2",
((twoThree/Total) * 100) as "2-3",
((threeFour/Total) * 100) as "3-4",
((fourFive/Total) * 100) as "4-5",
((fiveSix/Total) * 100) as "5-6",
((sixSeven/Total) * 100) as "6-7",
((sevenEight/Total) * 100) as "7-8",
((eightNine/Total) * 100) as "8-9",
((nineTen/Total) * 100) as "9-10"
from 
((select count(*) as nineTen, star_ID
from movies m, stars_in s
where m.movie_ID = s.movie_ID
and nvl(m.rating, 0) > 9
group by star_ID)
union
(select 0 as nineTen, star_ID
from stars_in p
where not exists (select count(*) as nineTen, star_ID
from movies m, stars_in s
where m.movie_ID = s.movie_ID
and s.star_ID = p.star_ID
and nvl(m.rating, 0) > 9
group by star_ID))) ten, 
(select count(*) as Total, star_ID
from movies m, stars_in s
where m.movie_ID = s.movie_ID
group by star_ID) tot,
((select count(*) as eightNine, star_ID
from movies m, stars_in s
where m.movie_ID = s.movie_ID
and nvl(m.rating, 0) > 8
and nvl(m.rating, 0) <= 9
group by star_ID)
union
(select 0 as eightNine, star_ID
from stars_in p
where not exists (select count(*) as eightNine, star_ID
from movies m, stars_in s
where m.movie_ID = s.movie_ID
and s.star_ID = p.star_ID
and nvl(m.rating, 0) > 8
and nvl(m.rating, 0) <= 9
group by star_ID))) nine,
((select count(*) as sevenEight, star_ID
from movies m, stars_in s
where m.movie_ID = s.movie_ID
and nvl(m.rating, 0) > 7
and nvl(m.rating, 0) <= 8
group by star_ID)
union
(select 0 as sevenEight, star_ID
from stars_in p
where not exists (select count(*) as sevenEight, star_ID
from movies m, stars_in s
where m.movie_ID = s.movie_ID
and s.star_ID = p.star_ID
and nvl(m.rating, 0) > 7
and nvl(m.rating, 0) <= 8
group by star_ID))) eight,
((select count(*) as sixSeven, star_ID
from movies m, stars_in s
where m.movie_ID = s.movie_ID
and nvl(m.rating, 0) > 6
and nvl(m.rating, 0) <= 7
group by star_ID)
union
(select 0 as sixSeven, star_ID
from stars_in p
where not exists (select count(*) as sixSeven, star_ID
from movies m, stars_in s
where m.movie_ID = s.movie_ID
and s.star_ID = p.star_ID
and nvl(m.rating, 0) > 6
and nvl(m.rating, 0) <= 7
group by star_ID))) seven,
((select count(*) as fiveSix, star_ID
from movies m, stars_in s
where m.movie_ID = s.movie_ID
and nvl(m.rating, 0) > 5
and nvl(m.rating, 0) <= 6
group by star_ID)
union
(select 0 as fiveSix, star_ID
from stars_in p
where not exists (select count(*) as fiveSix, star_ID
from movies m, stars_in s
where m.movie_ID = s.movie_ID
and s.star_ID = p.star_ID
and nvl(m.rating, 0) > 5
and nvl(m.rating, 0) <= 6
group by star_ID))) six,
((select count(*) as fourFive, star_ID
from movies m, stars_in s
where m.movie_ID = s.movie_ID
and nvl(m.rating, 0) > 4
and nvl(m.rating, 0) <= 5
group by star_ID)
union
(select 0 as fourFive, star_ID
from stars_in p
where not exists (select count(*) as fourFive, star_ID
from movies m, stars_in s
where m.movie_ID = s.movie_ID
and s.star_ID = p.star_ID
and nvl(m.rating, 0) > 4
and nvl(m.rating, 0) <= 5
group by star_ID))) five,
((select count(*) as threeFour, star_ID
from movies m, stars_in s
where m.movie_ID = s.movie_ID
and nvl(m.rating, 0) > 3
and nvl(m.rating, 0) <= 4
group by star_ID)
union
(select 0 as threeFour, star_ID
from stars_in p
where not exists (select count(*) as threeFour, star_ID
from movies m, stars_in s
where m.movie_ID = s.movie_ID
and s.star_ID = p.star_ID
and nvl(m.rating, 0) > 3
and nvl(m.rating, 0) <= 4
group by star_ID))) four,
((select count(*) as twoThree, star_ID
from movies m, stars_in s
where m.movie_ID = s.movie_ID
and nvl(m.rating, 0) > 2
and nvl(m.rating, 0) <= 3
group by star_ID)
union
(select 0 as twoThree, star_ID
from stars_in p
where not exists (select count(*) as twoThree, star_ID
from movies m, stars_in s
where m.movie_ID = s.movie_ID
and s.star_ID = p.star_ID
and nvl(m.rating, 0) > 2
and nvl(m.rating, 0) <= 3
group by star_ID))) three,
((select count(*) as oneTwo, star_ID
from movies m, stars_in s
where m.movie_ID = s.movie_ID
and nvl(m.rating, 0) > 1
and nvl(m.rating, 0) <= 2
group by star_ID)
union
(select 0 as oneTwo, star_ID
from stars_in p
where not exists (select count(*) as oneTwo, star_ID
from movies m, stars_in s
where m.movie_ID = s.movie_ID
and s.star_ID = p.star_ID
and nvl(m.rating, 0) > 1
and nvl(m.rating, 0) <= 2
group by star_ID))) two,
((select count(*) as zeroOne, star_ID
from movies m, stars_in s
where m.movie_ID = s.movie_ID
and nvl(m.rating, 0) >= 0
and nvl(m.rating, 0) <= 1
group by star_ID)
union
(select 0 as zeroOne, star_ID
from stars_in p
where not exists (select count(*) as zeroOne, star_ID
from movies m, stars_in s
where m.movie_ID = s.movie_ID
and s.star_ID = p.star_ID
and nvl(m.rating, 0) >= 0
and nvl(m.rating, 0) <= 1
group by star_ID))) one
where ten.star_ID = tot.star_ID
and nine.star_ID = tot.star_ID
and eight.star_ID = tot.star_ID
and seven.star_ID = tot.star_ID
and six.star_ID = tot.star_ID
and five.star_ID = tot.star_ID
and four.star_ID = tot.star_ID
and three.star_ID = tot.star_ID
and two.star_ID = tot.star_ID
and one.star_ID = tot.star_ID
and one.star_ID = 3025400;